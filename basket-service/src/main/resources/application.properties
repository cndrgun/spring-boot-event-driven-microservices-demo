spring.application.name=basket-service
server.port=8082
# ===============================#
# = POSTGRESQL DATABASE CONFIG =
# ===============================

spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=postgres
spring.datasource.password=secret
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================#
# = JPA / HIBERNATE SETTINGS   =
# ===============================#

# create / update / validate / none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.config.import=optional:configserver:http://localhost:8888
# Eureka?ya kay?t ol
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# ===============================#
# = JWT TOKEN =
# ===============================#
jwt.secret=mySuperSecretKeyThatIsAtLeast32CharsLong!


# Kafka Broker
spring.kafka.bootstrap-servers=localhost:9092

# Consumer ayarlar?
spring.kafka.consumer.group-id=basket-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer ayarlar?
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


# Aktuator endpoint'lerini aç
management.endpoints.web.exposure.include=health,info,prometheus

# Metrics için uygulama ad? etiketi
management.metrics.tags.application=${spring.application.name}
